# This file is to create a ingress controller service create
# it is used to make routing rules
# the load balancer that is provisioned by a cloud provider
# or on localhost will contact the ingress container and this ingress
# container will route the traffic via services .
# Now to contact the ingress container we will again
# make a service.

apiVersion: networking.k8s.io/v1

kind: Ingress

metadata:
  name: ingress-service-blogs
  # Now this annotations will help the ingress controller
  # understand that we are feeding some routing rules to it
  # so the controller try to find all the config files
  # that has the same annotation and this file will contain
  # all the routing rules for the ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    # Now to enable wildcard entries in nginx
    nginx.ingress.kubernetes.io/use-regex: "true"

spec:
  # rules will have the different routing rules that we want to
  # apply to the ingress and it is an array so (-)
  rules:
    # Now we will write the rules for posts
    - host: blogs.com
      # now here i have specified blogs.com as host but in reality
      # there will be somthing else hosted on blogs.com so
      # we will make our computer to redirect to localhost
      # or minikube ip when we go to blogs.com
      # so edit /etc/hosts and add
      # (minikube ip) blogs.com or
      # 127.0.0.1 blogs.com
      http:
        paths:
          # Now we want to specify the rules to the container/pod
          # but pod will communicate theough the service so we will
          # write the service name and service port
          # Also note ingress doesnot differentiate by the
          # method of the path so we need to create unique paths
          # so we need to modify /posts to /posts/create and so on ...

          # for create post
          - path: /posts/create
            pathType: Exact
            backend:
              service:
                name: posts-cluster-ip-service
                port:
                  number: 4000

          # for query service
          - path: /posts
            pathType: Exact
            backend:
              service:
                name: query-cluster-ip-service
                port:
                  number: 4002

          # For comment service
          - path: /posts/?(.*)/comments
            pathType: Exact
            backend:
              service:
                name: comments-cluster-ip-service
                port:
                  number: 4001

          # For React app
          # Now it is important for react appwhen using react
          # router dom to do exact this so we will use a
          # regex that will match all the paths in react app
          # note that this route is at the last as the routes
          # are in priority order so if nothing matches up it
          # goes down
          - path: /?(.*)
            pathType: Exact
            backend:
              service:
                name: client-cluster-ip-service
                port:
                  number: 3000
